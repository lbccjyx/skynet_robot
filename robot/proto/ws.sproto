
.NormalResp{
    resp 1 : string
}

PROTOCOL_NORMAL_STR_RESP 100 {
    response NormalResp
}

.package {
    type 0 : integer
    session 1 : integer
}

###################################################################

.Auth {
    type 0 : integer  # 1: register, 2: login
    username 1 : string
    password 2 : string
}

.AuthResponse {
    code 0 : integer  # 200: success, other: failed
    msg 1 : string  # 200: token, other: failed
}

PROTOCOL_LOGIN 101 {
    request Auth
    response AuthResponse
}

.WsMessage {
    type 0 : integer  # 1: echo, 2: create robots, 3: robot messages, 4: kick out 5:heartbeat
    message 1 : string
}

PROTOCOL_NORMAL_RESP 102 {
    response WsMessage
}

PROTOCOL_NORMAL_REQ 103 {
    request WsMessage
}


.NormalPos {
    pos_L_U_x 0 : integer
    pos_L_U_y 1 : integer
    pos_R_U_x 2 : integer
    pos_R_U_y 3 : integer
    pos_L_D_x 4 : integer
    pos_L_D_y 5 : integer
    pos_R_D_x 6 : integer
    pos_R_D_y 7 : integer
}

PROTOCOL_NORMAL_POS_C_TO_S 104 {
    request NormalPos
}


.RobotPos {
    robot_id 0 : integer
    posX 1 : integer
    posY 2 : integer
    speed 3 : integer
    status 4 : integer
    robot_total_num 5 : integer
}

PROTOCOL_NORMAL_POS_SEND 105 {
    response RobotPos
}
